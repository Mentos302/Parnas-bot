import { TelegrafContext } from "telegraf/typings/context";
import { Markup } from "telegraf";
import { ITelegrafContext } from "../interfaces/ITelegrafContext";
const Extra = require("telegraf/extra");

class WelcomeContoroller {
  async greeting(ctx: ITelegrafContext) {
    await ctx.reply(
      "<b>üëã –í—ñ—Ç–∞—é! –Ø –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –∫–ª—ñ–Ω—ñ–∫–∏ –µ—Å—Ç–µ—Ç–∏—á–Ω–æ—ó —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥—ñ—ó PARNAS</b>",
      Extra.HTML().markup((m: Markup<any>) => m.removeKeyboard())
    );

    ctx.reply(
      "<i>–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –í–∞–º:</i>",
      Extra.HTML().markup((m: Markup<any>) =>
        m.inlineKeyboard([
          [m.callbackButton("üì• –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –ø—Ä–∏–π–æ–º", "req1")],
          [m.callbackButton("üìû –ó–∞–º–æ–≤–∏—Ç–∏ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫", "req2")],
          [m.callbackButton("üí¨ –ü–æ—á–∞—Ç–∏ —á–∞—Ç –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", "req3")],
          [
            m.callbackButton(
              "üë§ –ü–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –Ω–∞—à–∏–º–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞–º–∏",
              "doctors"
            ),
          ],
          [
            m.callbackButton(
              "üîñ –î—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ –ø–æ—Å–ª—É–≥–∏, —è–∫—ñ –º–∏ –Ω–∞–¥–∞—î–º–æ",
              "services"
            ),
          ],
          [m.callbackButton("üìç –Ø–∫ –Ω–∞—Å –∑–Ω–∞–π—Ç–∏", "contacts")],
        ])
      )
    );
  }

  toAppointment(ctx: ITelegrafContext) {
    ctx.scene.enter("appointment-isNewClient");
  }

  toCallback(ctx: ITelegrafContext) {
    ctx.scene.enter("callback");
  }

  toChating(ctx: ITelegrafContext) {
    ctx.scene.enter("chating");
  }

  toDoctors(ctx: ITelegrafContext) {
    ctx.scene.enter("doctors-nav");
  }

  toServices(ctx: ITelegrafContext) {
    ctx.scene.enter("services-nav");
  }

  toContacts(ctx: ITelegrafContext) {
    ctx.scene.enter("contacts");
  }

  reEnter(ctx: ITelegrafContext) {
    ctx.scene.reenter();
  }
}

export default new WelcomeContoroller();
